basePath: /recruiter-api/v1
definitions:
  authinterface.AuthenticateReqInterface:
    properties:
      token:
        type: string
    type: object
  authinterface.AuthenticateResInterface:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  authinterface.Company:
    properties:
      companyID:
        type: string
      companyName:
        type: string
    type: object
  authinterface.LoginReqInterface:
    properties:
      email:
        type: string
    type: object
  authinterface.SignUpReqInterface:
    properties:
      company:
        $ref: '#/definitions/authinterface.Company'
      designation:
        type: string
      email:
        type: string
      firstName:
        type: string
    type: object
  errorinterface.ErrorResponse:
    properties:
      code:
        description: application-specific error code
        type: integer
      error:
        description: application-level error message, for debugging
        type: string
      status:
        description: user-level status message
        type: string
    type: object
  healthinterface.Health:
    properties:
      inboundInterfaces:
        items:
          $ref: '#/definitions/healthinterface.InboundInterface'
        type: array
      outboundInterfaces:
        items:
          $ref: '#/definitions/healthinterface.OutboundInterface'
        type: array
      serviceName:
        type: string
      serviceProvider:
        type: string
      serviceStartTimeUTC:
        type: string
      serviceStatus:
        type: string
      serviceVersion:
        type: string
      timeStampUTC:
        type: string
      uptime:
        type: number
    type: object
  healthinterface.InboundInterface:
    properties:
      address:
        type: string
      applicationName:
        type: string
      connectionStatus:
        type: string
      hostname:
        type: string
      os:
        type: string
      timeStampUTC:
        type: string
    type: object
  healthinterface.OutboundInterface:
    properties:
      applicationName:
        type: string
      connectionStatus:
        type: string
      timeStampUTC:
        type: string
      urls:
        items:
          type: string
        type: array
    type: object
  jobsinterface.JobRequest:
    properties:
      category:
        type: string
      createdTimestampUTC:
        type: string
      deleted:
        type: boolean
      employmentType:
        items:
          type: string
        type: array
      function:
        type: string
      goodToHaveSkills:
        items:
          type: string
        type: array
      id:
        type: string
      isRemote:
        type: boolean
      isVerified:
        type: boolean
      locations:
        items:
          type: string
        type: array
      maxExperience:
        type: integer
      minExperience:
        type: integer
      mustHaveSkills:
        items:
          type: string
        type: array
      organizationID:
        type: string
      recruiterID:
        type: string
      remoteTimezone:
        type: string
      sideNote:
        type: string
      summary:
        additionalProperties: true
        type: object
      title:
        type: string
      updatedTimestampUTC:
        type: string
      visaSponsorShip:
        type: boolean
    type: object
  jobsinterface.JobResponse:
    properties:
      category:
        type: string
      createdTimestampUTC:
        type: string
      deleted:
        type: boolean
      employmentType:
        items:
          type: string
        type: array
      function:
        type: string
      goodToHaveSkills:
        items:
          type: string
        type: array
      id:
        type: string
      isRemote:
        type: boolean
      isVerified:
        type: boolean
      locations:
        items:
          type: string
        type: array
      maxExperience:
        type: integer
      minExperience:
        type: integer
      mustHaveSkills:
        items:
          type: string
        type: array
      organizationID:
        type: string
      recruiterID:
        type: string
      remoteTimezone:
        type: string
      sideNote:
        type: string
      summary:
        additionalProperties: true
        type: object
      title:
        type: string
      updatedTimestampUTC:
        type: string
      visaSponsorShip:
        type: boolean
    type: object
host: localhost:8001
info:
  contact:
    email: hello@xyz.ai
    name: API Support
    url: http://xyz.ai
  description: Recruiter API Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Recruiter API Documentation
  version: "2.0"
paths:
  /authenticate:
    post:
      consumes:
      - application/json
      description: It allows to objten JWT and Refresh token
      parameters:
      - description: authenticate
        in: body
        name: '*'
        required: true
        schema:
          $ref: '#/definitions/authinterface.AuthenticateReqInterface'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authinterface.AuthenticateResInterface'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Authenticate with Token
      tags:
      - authentication
  /health:
    get:
      consumes:
      - application/json
      description: It returns the health of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/healthinterface.Health'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Get health of the service
      tags:
      - health
  /jobs:
    post:
      consumes:
      - application/json
      description: It allows to Post a new Job
      parameters:
      - description: BEARER JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: Job Details
        in: body
        name: '*'
        required: true
        schema:
          $ref: '#/definitions/jobsinterface.JobRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/jobsinterface.JobResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Post a new Job
      tags:
      - jobs
  /jobs/jobID:
    delete:
      consumes:
      - application/json
      description: It allows to delete a Job by ID
      parameters:
      - description: Job ID
        in: path
        name: jobID
        required: true
        type: string
      - description: BEARER JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Delete a Job
      tags:
      - jobs
    get:
      consumes:
      - application/json
      description: It allows to reterive a Job by ID
      parameters:
      - description: Job ID
        in: path
        name: jobID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/jobsinterface.JobResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Get a Job
      tags:
      - jobs
    put:
      consumes:
      - application/json
      description: It allows to update a Job
      parameters:
      - description: Job Details
        in: body
        name: '*'
        required: true
        schema:
          $ref: '#/definitions/jobsinterface.JobRequest'
      - description: BEARER JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: Job ID
        in: path
        name: jobID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/jobsinterface.JobResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Update a  Job
      tags:
      - jobs
  /login:
    post:
      consumes:
      - application/json
      description: It allows to login to account with email address registered
      parameters:
      - description: login with email
        in: body
        name: '*'
        required: true
        schema:
          $ref: '#/definitions/authinterface.LoginReqInterface'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Login to account with email
      tags:
      - authentication
  /logout:
    post:
      consumes:
      - application/json
      description: It allows to logout users from account with JWT
      parameters:
      - description: BEARER JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Logout
      tags:
      - authentication
  /signup:
    post:
      consumes:
      - application/json
      description: It allows to sign up with email address and personal details
      parameters:
      - description: signup with email
        in: body
        name: '*'
        required: true
        schema:
          $ref: '#/definitions/authinterface.SignUpReqInterface'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Sign up with email
      tags:
      - authentication
  /validate:
    post:
      consumes:
      - application/json
      description: It allows to logout users from account with JWT
      parameters:
      - description: BEARER JWT
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Logout
      tags:
      - authentication
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
