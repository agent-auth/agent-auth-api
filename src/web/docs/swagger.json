{
    "swagger": "2.0",
    "info": {
        "description": "Recruiter API Documentation",
        "title": "Recruiter API Documentation",
        "contact": {
            "name": "API Support",
            "url": "http://jobbox.ai",
            "email": "hello@jobbox.ai"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "host": "localhost:8001",
    "basePath": "/recruiter-api/v1",
    "paths": {
        "/authenticate": {
            "post": {
                "description": "It allows to objten JWT and Refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authenticate with Token",
                "parameters": [
                    {
                        "description": "authenticate",
                        "name": "*",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authinterface.AuthenticateReqInterface"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/authinterface.AuthenticateResInterface"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "It returns the health of the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Get health of the service",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/healthinterface.Health"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/jobs": {
            "post": {
                "description": "It allows to Post a new Job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Post a new Job",
                "parameters": [
                    {
                        "description": "Job Details",
                        "name": "*",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jobsinterface.JobRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jobsinterface.JobResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/jobs/jobID": {
            "get": {
                "description": "It allows to reterive a Job by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobs"
                ],
                "summary": "Get a  Job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "jobID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jobsinterface.JobResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "It allows to login to account with email address registered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Login to account with email",
                "parameters": [
                    {
                        "description": "login with email",
                        "name": "*",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authinterface.LoginReqInterface"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "It allows to logout users from account with JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BEARER JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "It allows to sign up with email address and personal details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Sign up with email",
                "parameters": [
                    {
                        "description": "signup with email",
                        "name": "*",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authinterface.SignUpReqInterface"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/validate": {
            "post": {
                "description": "It allows to logout users from account with JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "BEARER JWT",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errorinterface.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authinterface.AuthenticateReqInterface": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "authinterface.AuthenticateResInterface": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "authinterface.Company": {
            "type": "object",
            "properties": {
                "companyID": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                }
            }
        },
        "authinterface.LoginReqInterface": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "authinterface.SignUpReqInterface": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "object",
                    "$ref": "#/definitions/authinterface.Company"
                },
                "designation": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                }
            }
        },
        "errorinterface.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "application-specific error code",
                    "type": "integer"
                },
                "error": {
                    "description": "application-level error message, for debugging",
                    "type": "string"
                },
                "status": {
                    "description": "user-level status message",
                    "type": "string"
                }
            }
        },
        "healthinterface.Health": {
            "type": "object",
            "properties": {
                "inboundInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/healthinterface.InboundInterface"
                    }
                },
                "outboundInterfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/healthinterface.OutboundInterface"
                    }
                },
                "serviceName": {
                    "type": "string"
                },
                "serviceProvider": {
                    "type": "string"
                },
                "serviceStartTimeUTC": {
                    "type": "string"
                },
                "serviceStatus": {
                    "type": "string"
                },
                "serviceVersion": {
                    "type": "string"
                },
                "timeStampUTC": {
                    "type": "string"
                },
                "uptime": {
                    "type": "number"
                }
            }
        },
        "healthinterface.InboundInterface": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "applicationName": {
                    "type": "string"
                },
                "connectionStatus": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "timeStampUTC": {
                    "type": "string"
                }
            }
        },
        "healthinterface.OutboundInterface": {
            "type": "object",
            "properties": {
                "applicationName": {
                    "type": "string"
                },
                "connectionStatus": {
                    "type": "string"
                },
                "timeStampUTC": {
                    "type": "string"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "jobsinterface.JobRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdTimestampUTC": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "employmentType": {
                    "type": "string"
                },
                "goodToHaveSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "isRemote": {
                    "type": "boolean"
                },
                "isVerified": {
                    "type": "boolean"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mustHaveSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "organizationID": {
                    "type": "string"
                },
                "recruiterID": {
                    "type": "string"
                },
                "remoteCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "remoteTimezone": {
                    "type": "string"
                },
                "sideNote": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedTimestampUTC": {
                    "type": "string"
                },
                "visaSponsorShip": {
                    "type": "boolean"
                },
                "yearsOfExperience": {
                    "type": "string"
                }
            }
        },
        "jobsinterface.JobResponse": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdTimestampUTC": {
                    "type": "string"
                },
                "deleted": {
                    "type": "boolean"
                },
                "employmentType": {
                    "type": "string"
                },
                "goodToHaveSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "isRemote": {
                    "type": "boolean"
                },
                "isVerified": {
                    "type": "boolean"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mustHaveSkills": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "organizationID": {
                    "type": "string"
                },
                "recruiterID": {
                    "type": "string"
                },
                "remoteCountries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "remoteTimezone": {
                    "type": "string"
                },
                "sideNote": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedTimestampUTC": {
                    "type": "string"
                },
                "visaSponsorShip": {
                    "type": "boolean"
                },
                "yearsOfExperience": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    }
}