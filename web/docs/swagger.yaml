basePath: /
definitions:
  dbmodels.AuditLog:
    properties:
      Action:
        description: Action taken (e.g., "Created Task", "Updated Milestone")
        type: string
      Details:
        description: Detailed description of the action
        type: string
      Timestamp:
        description: When the action was performed
        type: string
      UserID:
        description: The user who performed the action
        type: string
    type: object
  dbmodels.Permissions:
    properties:
      resource:
        additionalProperties: true
        type: object
    type: object
  dbmodels.Workspace:
    properties:
      AuditLogs:
        description: Audit logs for project actions
        items:
          $ref: '#/definitions/dbmodels.AuditLog'
        type: array
      CreatedTimestampUTC:
        type: string
      Deleted:
        type: boolean
      Description:
        type: string
      Members:
        items:
          type: string
        type: array
      Name:
        description: Workspace details
        type: string
      OwnerID:
        type: string
      Slug:
        type: string
      UpdatedTimestampUTC:
        type: string
      id:
        type: string
    type: object
  errorinterface.ErrorResponse:
    properties:
      code:
        description: application-specific error code
        type: integer
      error:
        description: application-level error message, for debugging
        type: string
      status:
        description: user-level status message
        type: string
    type: object
  healthinterface.Health:
    properties:
      inboundInterfaces:
        items:
          $ref: '#/definitions/healthinterface.InboundInterface'
        type: array
      outboundInterfaces:
        items:
          $ref: '#/definitions/healthinterface.OutboundInterface'
        type: array
      serviceName:
        type: string
      serviceProvider:
        type: string
      serviceStartTimeUTC:
        type: string
      serviceStatus:
        type: string
      serviceVersion:
        type: string
      timeStampUTC:
        type: string
      uptime:
        type: number
    type: object
  healthinterface.InboundInterface:
    properties:
      address:
        type: string
      applicationName:
        type: string
      connectionStatus:
        type: string
      hostname:
        type: string
      os:
        type: string
      timeStampUTC:
        type: string
    type: object
  healthinterface.OutboundInterface:
    properties:
      applicationName:
        type: string
      connectionStatus:
        type: string
      timeStampUTC:
        type: string
      urls:
        items:
          type: string
        type: array
    type: object
  keycloak.PolicyRepresentation:
    properties:
      decisionStrategy:
        type: string
      description:
        type: string
      id:
        type: string
      logic:
        type: string
      name:
        type: string
      type:
        type: string
    type: object
  keycloak.ResourceRepresentation:
    properties:
      _id:
        type: string
      attributes:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      displayName:
        type: string
      icon_uri:
        type: string
      name:
        type: string
      owner:
        additionalProperties:
          type: string
        type: object
      scopes:
        items:
          $ref: '#/definitions/keycloak.ScopeRepresentation'
        type: array
      type:
        type: string
      uris:
        items:
          type: string
        type: array
    type: object
  keycloak.ScopeRepresentation:
    properties:
      displayName:
        type: string
      iconUri:
        type: string
      id:
        type: string
      name:
        type: string
      policies:
        items:
          $ref: '#/definitions/keycloak.PolicyRepresentation'
        type: array
      resources:
        items:
          $ref: '#/definitions/keycloak.ResourceRepresentation'
        type: array
    type: object
  oauth.ResourceRequest:
    properties:
      _id:
        type: string
      attributes:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      displayName:
        type: string
      icon_uri:
        type: string
      name:
        type: string
      owner:
        additionalProperties:
          type: string
        type: object
      scopes:
        items:
          $ref: '#/definitions/keycloak.ScopeRepresentation'
        type: array
      type:
        type: string
      uris:
        items:
          type: string
        type: array
    type: object
  oauth.ResourceResponse:
    properties:
      _id:
        type: string
      attributes:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      displayName:
        type: string
      icon_uri:
        type: string
      name:
        type: string
      owner:
        additionalProperties:
          type: string
        type: object
      scopes:
        items:
          $ref: '#/definitions/keycloak.ScopeRepresentation'
        type: array
      type:
        type: string
      uris:
        items:
          type: string
        type: array
    type: object
  rolespermissions.RoleRequest:
    properties:
      audit_logs:
        items:
          $ref: '#/definitions/dbmodels.AuditLog'
        type: array
      created_timestamp_utc:
        type: string
      deleted:
        type: boolean
      description:
        type: string
      id:
        type: string
      owner_id:
        type: string
      permissions:
        $ref: '#/definitions/dbmodels.Permissions'
      project_id:
        type: string
      role:
        type: string
      updated_timestamp_utc:
        type: string
    type: object
  rolespermissions.RoleResponse:
    properties:
      audit_logs:
        items:
          $ref: '#/definitions/dbmodels.AuditLog'
        type: array
      created_timestamp_utc:
        type: string
      deleted:
        type: boolean
      description:
        type: string
      id:
        type: string
      owner_id:
        type: string
      permissions:
        $ref: '#/definitions/dbmodels.Permissions'
      project_id:
        type: string
      role:
        type: string
      updated_timestamp_utc:
        type: string
    type: object
  rolespermissions.UpdateAttributeRequest:
    properties:
      path:
        type: string
      resource:
        type: string
      value: {}
    type: object
  workspace.AddMemberRequest:
    properties:
      memberID:
        type: string
    type: object
  workspace.WorkspaceRequest:
    description: Workspace request model
    properties:
      AuditLogs:
        description: Audit logs for project actions
        items:
          $ref: '#/definitions/dbmodels.AuditLog'
        type: array
      CreatedTimestampUTC:
        type: string
      Deleted:
        type: boolean
      Description:
        type: string
      Members:
        items:
          type: string
        type: array
      Name:
        description: Workspace details
        type: string
      OwnerID:
        type: string
      Slug:
        type: string
      UpdatedTimestampUTC:
        type: string
      id:
        type: string
    type: object
  workspace.WorkspaceResponse:
    description: Workspace response model
    properties:
      AuditLogs:
        description: Audit logs for project actions
        items:
          $ref: '#/definitions/dbmodels.AuditLog'
        type: array
      CreatedTimestampUTC:
        type: string
      Deleted:
        type: boolean
      Description:
        type: string
      Members:
        items:
          type: string
        type: array
      Name:
        description: Workspace details
        type: string
      OwnerID:
        type: string
      Slug:
        type: string
      UpdatedTimestampUTC:
        type: string
      id:
        type: string
    type: object
  workspace.WorkspacesResponse:
    description: Workspaces list response model
    properties:
      workspaces:
        items:
          $ref: '#/definitions/dbmodels.Workspace'
        type: array
    type: object
host: localhost:8002
info:
  contact: {}
paths:
  /{workspace_id}/{project_id}/oauth/{resource_id}:
    put:
      consumes:
      - application/json
      description: Updates an existing Keycloak resource
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource_id
        required: true
        type: string
      - description: Resource Details
        in: body
        name: resource
        required: true
        schema:
          $ref: '#/definitions/oauth.ResourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/oauth.ResourceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Update a resource
      tags:
      - resources
  /{workspace_id}/{project_id}/oauth/resources:
    get:
      consumes:
      - application/json
      description: Lists all Keycloak resources with optional filtering
      parameters:
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by type
        in: query
        name: type
        type: string
      - description: Filter by URI
        in: query
        name: uri
        type: string
      - description: Filter by owner
        in: query
        name: owner
        type: string
      - description: Filter by scope
        in: query
        name: scope
        type: string
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/oauth.ResourceResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: List resources
      tags:
      - resources
    post:
      consumes:
      - application/json
      description: Creates a new Keycloak resource
      parameters:
      - description: Bearer JWT
        in: header
        name: Authorization
        required: true
        type: string
      - description: Resource Details
        in: body
        name: resource
        required: true
        schema:
          $ref: '#/definitions/oauth.ResourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/oauth.ResourceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Create a new resource
      tags:
      - resources
  /{workspace_id}/{project_id}/oauth/resources/{resource_id}:
    delete:
      consumes:
      - application/json
      description: Deletes a Keycloak resource
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Delete a resource
      tags:
      - resources
    get:
      consumes:
      - application/json
      description: Retrieves a Keycloak resource by ID
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Resource ID
        in: path
        name: resource_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/oauth.ResourceResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Get a resource
      tags:
      - resources
  /{workspace_id}/{project_id}/roles:
    delete:
      consumes:
      - application/json
      description: Deletes all roles for a specific project
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete permissions by project
      tags:
      - roles
    get:
      consumes:
      - application/json
      description: Gets all roles for a specific project
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/rolespermissions.RoleResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get roles by project
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Creates a new role
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Role details
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/rolespermissions.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rolespermissions.RoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create role
      tags:
      - roles
  /{workspace_id}/{project_id}/roles/{role_id}:
    delete:
      consumes:
      - application/json
      description: Deletes a role by ID
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete permission
      tags:
      - roles
    get:
      consumes:
      - application/json
      description: Gets a role by ID
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: string
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rolespermissions.RoleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get role
      tags:
      - roles
  /{workspace_id}/{project_id}/roles/{role_id}/permissions:
    delete:
      consumes:
      - application/json
      description: Removes a specific attribute from a permission
      parameters:
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: string
      - description: Attribute path
        in: path
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Remove permission attribute
      tags:
      - permissions
    put:
      consumes:
      - application/json
      description: Updates a specific attribute of a permission
      parameters:
      - description: Role ID
        in: path
        name: role_id
        required: true
        type: string
      - description: Attribute update details
        in: body
        name: attribute
        required: true
        schema:
          $ref: '#/definitions/rolespermissions.UpdateAttributeRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update permission attribute
      tags:
      - permissions
  /health:
    get:
      consumes:
      - application/json
      description: It returns the health of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/healthinterface.Health'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Get health of the service
      tags:
      - health
  /workspaces:
    get:
      consumes:
      - application/json
      description: Lists all workspaces with pagination
      parameters:
      - default: 0
        description: Number of records to skip
        in: query
        name: skip
        type: integer
      - default: 10
        description: Number of records to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/workspace.WorkspacesResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List workspaces
      tags:
      - workspaces
    post:
      consumes:
      - application/json
      description: Creates a new workspace
      parameters:
      - description: Workspace details
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/workspace.WorkspaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/workspace.WorkspaceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create workspace
      tags:
      - workspaces
  /workspaces/{workspace_id}:
    delete:
      consumes:
      - application/json
      description: Deletes a workspace (owner only)
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete workspace
      tags:
      - workspaces
    get:
      consumes:
      - application/json
      description: Gets a workspace by ID
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/workspace.WorkspaceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get workspace
      tags:
      - workspaces
    put:
      consumes:
      - application/json
      description: Updates an existing workspace (owner only)
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Updated workspace details
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/workspace.WorkspaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/workspace.WorkspaceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update workspace
      tags:
      - workspaces
  /workspaces/{workspace_id}/members:
    post:
      consumes:
      - application/json
      description: Adds a new member to a workspace (owner only)
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Member ID to add
        in: body
        name: member
        required: true
        schema:
          $ref: '#/definitions/workspace.AddMemberRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Add member to workspace
      tags:
      - workspaces
  /workspaces/{workspace_id}/members/{member_id}:
    delete:
      consumes:
      - application/json
      description: Removes a member from a workspace (owner only)
      parameters:
      - description: Workspace ID
        in: path
        name: workspace_id
        required: true
        type: string
      - description: Member ID
        in: path
        name: member_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Remove member from workspace
      tags:
      - workspaces
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
